// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel RandomTest

RWTexture2D<float4> Texture;
uint width;
uint height;

//Hash function www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf
uint hash(uint state) {
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

[numthreads(8,8,1)]
void RandomTest (uint3 id : SV_DispatchThreadID) {
    //Exit if the current thread is outside the texture bounds
    if (id.x < 0 || id.x >= width || id.y < 0 || id.y >= height) { return; }

    int pixelIndex = id.x + (width * id.y);
    uint pseudoRandomNumber = hash(pixelIndex);
    Texture[id.xy] = pseudoRandomNumber / 4294967295.0;
}
